
services:
  # ------------------------
  # PostgreSQL Service
  # ------------------------
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_USER=airflow         # Default PostgreSQL username
      - POSTGRES_PASSWORD=airflow     # Default PostgreSQL password
      - POSTGRES_DB=airflow           # Default PostgreSQL database
    ports:
      - "5434:5432"                   # Expose DB on host port 5434

  # ------------------------
  # Airflow Initialization
  # Prepares metadata DB and Airflow folder structure
  # ------------------------
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /opt/airflow/scripts/airflow-entrypoint.sh 
    command: version                
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
    # Map host directory -> container directory
      - ./airflow/dags:/opt/airflow/dags                    # DAGs folder
      - ./airflow/config/auth:/opt/airflow/config/auth      # Custom security manager + JSON perms
      - ./airflow/logs:/opt/airflow/logs                    # Logs folder
      - ./airflow/scripts:/opt/airflow/scripts              # Entrypoints & helpers
      - ./schemas:/opt/airflow/schemas                              # CREATE TABLE .sql files
      - ./data/files:/opt/airflow/data/files                        # TSV/TSV.GZ IMDb downloads
      - ./dbt:/opt/airflow/dbt                              # dbt project mounted for later steps

  # ------------------------
  # Airflow Scheduler
  # Triggers DAGs based on schedule or sensors
  # ------------------------
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /opt/airflow/scripts/airflow-entrypoint.sh 
    command: scheduler
    restart: on-failure
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - "8794:8793" 
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/config/auth:/opt/airflow/config/auth
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/scripts:/opt/airflow/scripts

      - ./data/files:/opt/airflow/data/files
      - ./schemas:/opt/airflow/schemas

      - ./dbt:/opt/airflow/dbt
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-scheduler.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 2

  # ------------------------
  # Airflow Webserver
  # Main UI interface for monitoring DAGs
  # ------------------------
  webserver:
    hostname: webserver
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: /opt/airflow/scripts/airflow-entrypoint.sh 
    command: webserver
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW__WEBSERVER__SECURITY_MANAGER_CLASS=config.auth.security.CustomSecurityManager
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/config/auth:/opt/airflow/config/auth
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/scripts:/opt/airflow/scripts

      - ./data/files:/opt/airflow/data/files
      - ./schemas:/opt/airflow/schemas

      - ./dbt:/opt/airflow/dbt
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 2
